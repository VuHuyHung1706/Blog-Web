{"ast":null,"code":"var _jsxFileName = \"/Users/vhh1706/Data/BackEnd/WEB/Blog_Web/Frontend/blog/src/PostManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField, Container, Typography, Grid, Card, CardContent, Box } from '@mui/material';\nimport { getPosts, createPost, uploadImage } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostManager = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState({\n    title: '',\n    content: '',\n    imageUrl: ''\n  });\n  const [image, setImage] = useState(null);\n\n  // Load danh sách bài viết khi component mount\n  useEffect(() => {\n    loadPosts();\n  }, []);\n\n  // Tải bài viết\n  const loadPosts = async () => {\n    try {\n      const response = await getPosts();\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n\n  // Tạo bài viết mới\n  const handleCreatePost = async () => {\n    try {\n      const post = {\n        ...newPost\n      };\n      if (image) {\n        const imageUrl = await handleUploadImage(image); // Lấy URL ảnh từ backend\n        post.imageUrl = imageUrl; // Gắn URL ảnh vào bài viết\n      }\n      await createPost(post); // Gửi bài viết kèm URL ảnh lên backend\n      setPosts([...posts, post]);\n      setNewPost({\n        title: '',\n        content: '',\n        imageUrl: ''\n      });\n      setImage(null);\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n\n  // Upload ảnh lên backend\n  const handleUploadImage = async file => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await uploadImage(formData);\n      return response.data; // Trả về URL ảnh\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n\n  // Lấy ảnh từ file input\n  const handleImageChange = e => {\n    setImage(e.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Post Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 3,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Title\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: newPost.title,\n        onChange: e => setNewPost({\n          ...newPost,\n          title: e.target.value\n        }),\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Content\",\n        variant: \"outlined\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: newPost.content,\n        onChange: e => setNewPost({\n          ...newPost,\n          content: e.target.value\n        }),\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageChange,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleCreatePost,\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              paragraph: true,\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:8080${post.imageUrl}`,\n              alt: \"Post\",\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              onClick: () => handleDeletePost(post.id),\n              sx: {\n                mr: 1\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              onClick: () => setEditingPost(post),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(PostManager, \"bRhHw3LvA6cjGib+rFpL/uWpqaY=\");\n_c = PostManager;\nexport default PostManager;\nvar _c;\n$RefreshReg$(_c, \"PostManager\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","Container","Typography","Grid","Card","CardContent","Box","getPosts","createPost","uploadImage","jsxDEV","_jsxDEV","PostManager","_s","posts","setPosts","newPost","setNewPost","title","content","imageUrl","image","setImage","loadPosts","response","data","error","console","handleCreatePost","post","handleUploadImage","file","formData","FormData","append","handleImageChange","e","target","files","maxWidth","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","label","fullWidth","value","onChange","margin","multiline","rows","type","accept","color","onClick","container","spacing","map","item","xs","sm","md","paragraph","src","alt","width","handleDeletePost","id","sx","mr","setEditingPost","_c","$RefreshReg$"],"sources":["/Users/vhh1706/Data/BackEnd/WEB/Blog_Web/Frontend/blog/src/PostManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, TextField, Container, Typography, Grid, Card, CardContent, Box } from '@mui/material';\nimport { getPosts, createPost, uploadImage } from './api';\n\nconst PostManager = () => {\n    const [posts, setPosts] = useState([]);\n    const [newPost, setNewPost] = useState({ title: '', content: '', imageUrl: '' });\n    const [image, setImage] = useState(null);\n\n    // Load danh sách bài viết khi component mount\n    useEffect(() => {\n        loadPosts();\n    }, []);\n\n    // Tải bài viết\n    const loadPosts = async () => {\n        try {\n            const response = await getPosts();\n            setPosts(response.data);\n        } catch (error) {\n            console.error('Error fetching posts:', error);\n        }\n    };\n\n    // Tạo bài viết mới\n    const handleCreatePost = async () => {\n        try {\n            const post = { ...newPost };\n            if (image) {\n                const imageUrl = await handleUploadImage(image); // Lấy URL ảnh từ backend\n                post.imageUrl = imageUrl; // Gắn URL ảnh vào bài viết\n            }\n            await createPost(post); // Gửi bài viết kèm URL ảnh lên backend\n            setPosts([...posts, post]);\n            setNewPost({ title: '', content: '', imageUrl: '' });\n            setImage(null);\n        } catch (error) {\n            console.error('Error creating post:', error);\n        }\n    };\n\n    // Upload ảnh lên backend\n    const handleUploadImage = async (file) => {\n        try {\n            const formData = new FormData();\n            formData.append('file', file);\n            const response = await uploadImage(formData);\n            return response.data; // Trả về URL ảnh\n        } catch (error) {\n            console.error('Error uploading image:', error);\n        }\n    };\n\n    // Lấy ảnh từ file input\n    const handleImageChange = (e) => {\n        setImage(e.target.files[0]);\n    };\n\n    return (\n        <Container maxWidth=\"md\">\n            <Typography variant=\"h4\" gutterBottom>\n                Post Manager\n            </Typography>\n\n            {/* Form tạo bài viết mới */}\n            <Box mb={3}>\n                <TextField\n                    label=\"Title\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={newPost.title}\n                    onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}\n                    margin=\"normal\"\n                />\n                <TextField\n                    label=\"Content\"\n                    variant=\"outlined\"\n                    fullWidth\n                    multiline\n                    rows={4}\n                    value={newPost.content}\n                    onChange={(e) => setNewPost({ ...newPost, content: e.target.value })}\n                    margin=\"normal\"\n                />\n\n                {/* Upload ảnh */}\n                <input\n                    type=\"file\"\n                    onChange={handleImageChange}\n                    accept=\"image/*\"\n                />\n\n                <Button variant=\"contained\" color=\"primary\" onClick={handleCreatePost}>\n                    Create Post\n                </Button>\n            </Box>\n\n            {/* Danh sách bài viết */}\n            <Grid container spacing={3}>\n                {posts.map((post) => (\n                    <Grid item xs={12} sm={6} md={4} key={post.id}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant=\"h6\">{post.title}</Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n                                    {post.content}\n                                </Typography>\n                                {post.imageUrl && (\n                                    <img src={`http://localhost:8080${post.imageUrl}`} alt=\"Post\" width=\"100%\" />\n                                )}\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    onClick={() => handleDeletePost(post.id)}\n                                    sx={{ mr: 1 }}\n                                >\n                                    Delete\n                                </Button>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => setEditingPost(post)}\n                                >\n                                    Edit\n                                </Button>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n        </Container>\n    );\n};\n\nexport default PostManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}