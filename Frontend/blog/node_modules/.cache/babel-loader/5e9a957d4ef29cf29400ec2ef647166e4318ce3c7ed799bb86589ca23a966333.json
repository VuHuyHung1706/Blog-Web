{"ast":null,"code":"var _jsxFileName = \"/Users/vhh1706/Data/BackEnd/WEB/Blog_Web/Frontend/blog/src/PostManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getPosts, createPost, updatePost, deletePost } from './api'; // Đưa API call vào đây\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostManager = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState({\n    title: '',\n    content: ''\n  });\n  const [editingPost, setEditingPost] = useState(null);\n\n  // Load danh sách bài viết khi component mount\n  useEffect(() => {\n    loadPosts();\n  }, []);\n\n  // Hàm tải danh sách bài viết\n  const loadPosts = async () => {\n    try {\n      const response = await getPosts();\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n\n  // Hàm tạo bài viết mới\n  const handleCreatePost = async () => {\n    try {\n      const response = await createPost(newPost);\n      setPosts([...posts, response.data]);\n      setNewPost({\n        title: '',\n        content: ''\n      });\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n\n  // Hàm xóa bài viết\n  const handleDeletePost = async id => {\n    try {\n      await deletePost(id);\n      setPosts(posts.filter(post => post.id !== id));\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n\n  // Hàm chỉnh sửa bài viết\n  const handleUpdatePost = async () => {\n    if (editingPost) {\n      try {\n        const updatedPost = {\n          title: editingPost.title,\n          content: editingPost.content\n        };\n        const response = await updatePost(editingPost.id, updatedPost);\n        setPosts(posts.map(post => post.id === response.data.id ? response.data : post));\n        setEditingPost(null);\n      } catch (error) {\n        console.error('Error updating post:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newPost.title,\n        onChange: e => setNewPost({\n          ...newPost,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: newPost.content,\n        onChange: e => setNewPost({\n          ...newPost,\n          content: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreatePost,\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeletePost(post.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditingPost(post),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), editingPost && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingPost.title,\n        onChange: e => setEditingPost({\n          ...editingPost,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editingPost.content,\n        onChange: e => setEditingPost({\n          ...editingPost,\n          content: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdatePost,\n        children: \"Update Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditingPost(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(PostManager, \"Gr9LuFeEr0AG69HX62mz6rfJkD0=\");\n_c = PostManager;\nexport default PostManager;\nvar _c;\n$RefreshReg$(_c, \"PostManager\");","map":{"version":3,"names":["React","useState","useEffect","getPosts","createPost","updatePost","deletePost","jsxDEV","_jsxDEV","PostManager","_s","posts","setPosts","newPost","setNewPost","title","content","editingPost","setEditingPost","loadPosts","response","data","error","console","handleCreatePost","handleDeletePost","id","filter","post","handleUpdatePost","updatedPost","map","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/vhh1706/Data/BackEnd/WEB/Blog_Web/Frontend/blog/src/PostManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getPosts, createPost, updatePost, deletePost } from './api'; // Đưa API call vào đây\n\nconst PostManager = () => {\n    const [posts, setPosts] = useState([]);\n    const [newPost, setNewPost] = useState({ title: '', content: '' });\n    const [editingPost, setEditingPost] = useState(null);\n\n    // Load danh sách bài viết khi component mount\n    useEffect(() => {\n        loadPosts();\n    }, []);\n\n    // Hàm tải danh sách bài viết\n    const loadPosts = async () => {\n        try {\n            const response = await getPosts();\n            setPosts(response.data);\n        } catch (error) {\n            console.error('Error fetching posts:', error);\n        }\n    };\n\n    // Hàm tạo bài viết mới\n    const handleCreatePost = async () => {\n        try {\n            const response = await createPost(newPost);\n            setPosts([...posts, response.data]);\n            setNewPost({ title: '', content: '' });\n        } catch (error) {\n            console.error('Error creating post:', error);\n        }\n    };\n\n    // Hàm xóa bài viết\n    const handleDeletePost = async (id) => {\n        try {\n            await deletePost(id);\n            setPosts(posts.filter(post => post.id !== id));\n        } catch (error) {\n            console.error('Error deleting post:', error);\n        }\n    };\n\n    // Hàm chỉnh sửa bài viết\n    const handleUpdatePost = async () => {\n        if (editingPost) {\n            try {\n                const updatedPost = { title: editingPost.title, content: editingPost.content };\n                const response = await updatePost(editingPost.id, updatedPost);\n                setPosts(posts.map(post => (post.id === response.data.id ? response.data : post)));\n                setEditingPost(null);\n            } catch (error) {\n                console.error('Error updating post:', error);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <h2>Post Manager</h2>\n\n            {/* Form tạo bài viết mới */}\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    value={newPost.title}\n                    onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}\n                />\n                <textarea\n                    placeholder=\"Content\"\n                    value={newPost.content}\n                    onChange={(e) => setNewPost({ ...newPost, content: e.target.value })}\n                />\n                <button onClick={handleCreatePost}>Create Post</button>\n            </div>\n\n            {/* Danh sách bài viết */}\n            <ul>\n                {posts.map(post => (\n                    <li key={post.id}>\n                        <h3>{post.title}</h3>\n                        <p>{post.content}</p>\n                        <button onClick={() => handleDeletePost(post.id)}>Delete</button>\n                        <button onClick={() => setEditingPost(post)}>Edit</button>\n                    </li>\n                ))}\n            </ul>\n\n            {/* Form chỉnh sửa bài viết */}\n            {editingPost && (\n                <div>\n                    <h3>Edit Post</h3>\n                    <input\n                        type=\"text\"\n                        value={editingPost.title}\n                        onChange={(e) => setEditingPost({ ...editingPost, title: e.target.value })}\n                    />\n                    <textarea\n                        value={editingPost.content}\n                        onChange={(e) => setEditingPost({ ...editingPost, content: e.target.value })}\n                    />\n                    <button onClick={handleUpdatePost}>Update Post</button>\n                    <button onClick={() => setEditingPost(null)}>Cancel</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default PostManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}